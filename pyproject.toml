[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "osmand-map-tools"
authors = ["ZUB3C <pitzubarev@yandex.ru>"]
description = "Script to download maps from nakarte.me and convert them to sqlitedb format suitable for OsmAnd"
version = "0.1.0"
license = "GPLv3+"
package-mode = true

[tool.poetry.dependencies]
python = "^3.11"
pillow = "^10.4.0"
tqdm = "^4.66.4"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.3"
mypy = "^1.8.0"

[tool.poetry.scripts]
mbtiles2osmand = "osmand_map_tools.mbtiles2osmand:main"
cut-osmand-map = "osmand_map_tools.cut_osmand_map:main"
merge-osmand = "osmand_map_tools.merge_osmand:main"
download-nakarte-me-maps = "osmand_map_tools.download_nakarte_me_maps:main"

[tool.ruff]
target-version = "py311"
line-length = 99
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    ".cache",
    "build",
    "dist",
    "scripts",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "G", # flake8-logging-format
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "PD", # pandas-vet
    "PLC", # pylint conventions
    "PLE", # pylint errors
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "YTT", # flake8-2020
    "DTZ", # flake8-datetimez
    "RUF", # ruff-specific rules
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ASYNC", # flake8-async
]
ignore = [
    "PTH123", # `open()` should be replaced by `Path.open()`
    "PD901", # Avoid using the generic variable name df for DataFrames
    "RUF003", # Ambiguous unicode character comment
    "RUF001", # String contains ambiguous `Ð’` (CYRILLIC CAPITAL LETTER VE)
]

[tool.mypy]
strict = true
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    ".cache",
    "build",
    "dist",
    "scripts",
]
